#!/usr/bin/env bash

SERVER=${2-'nginx'}

switch_to() {
    local DESIRED=$1
    local SERVER=$2
    local CURR=$(php-current-version)
    if [[ $CURRENT == $DESIRED ]]; then
        echo "Bumblehead, you're aleady using $DESIRED."
        exit 0
        return
    fi

    # Unload the running php-fpm
    if [[ $SERVER == 'nginx' ]]; then
        IFS=' ' read -ra ALL <<< "$(php-installed)"
        local i; for i in "${!ALL[@]}"; do
            sudo launchctl unload -w /usr/local/opt/${ALL[$i]}/homebrew-php.josegonzalez.${ALL[$i]}.plist > /dev/null 2>&1
        done
    fi
    brew unlink $CURR > /dev/null 2>&1

    brew link $DESIRED > /dev/null 2>&1
    if [[ $SERVER == 'nginx' ]]; then
        sudo rm -f $C10_DOTFILES/php/homebrew-php.josegonzalez.plist
        sudo ln -sf /usr/local/opt/$DESIRED/homebrew-php.josegonzalez.${DESIRED}.plist $C10_DOTFILES/php/homebrew-php.josegonzalez.plist
        sudo launchctl load -w $C10_DOTFILES/php/homebrew-php.josegonzalez.plist
    fi

    echo "Switched to PHP $(pretty_php_version), mkay?"
}

# returns the next php version after the current if no valid argument is
# supplied, and the supplied version otherwise
sanitize() {
    local TO=${1-''}
    IFS=' ' read -ra ALL <<< "$(php-installed)"

    # exit if valid version is supplied
    if [[ ! -z $TO ]]; then
        for i in ${ALL[@]}; do
            if [[ $i == $TO ]]; then
                echo $TO && return
            fi
        done
    fi

    # return the next version after the current, if no valid
    # argument is supplied
    local CURR=$(php-current-version)
    local VER=false
    local i; for i in "${!ALL[@]}"; do
        [[ $VER -eq 1 ]] && echo ${ALL[$i]} && return
        if [[ ${ALL[$i]} == $CURR ]]; then
            VER=1
        fi
    done

    # the next version must be the first in the list
    echo ${ALL[0]}
}

pretty_php_version() {
    echo $(php --info | grep -m 1 'PHP Version' | cut -d ' ' -f 4 | cut -d . -f 1-2)
}

restart_server() {
    local SERVER=${1-''}
    if [[ $SERVER == 'nginx' ]]; then
        sudo nginx -s reload
        echo "Reloaded nginx config."
    else
        sudo pkill -9 httpd
        sudo apachectl -k restart > /dev/null 2>&1
        echo "Restarted apache."
    fi
}

switch_to $(sanitize ${1-''}) $SERVER
restart_server $SERVER
